{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "kno2-costmgmt-dev-wus3-adf"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/139cb45c-2ee1-4dbc-b7da-ecdfccd48645/resourceGroups/kno2-costmgmt-dev-wus3-rg/providers/Microsoft.Storage/storageAccounts/kno2costmgmtdevwus3sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Combined_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSP": {},
									"PAYG": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-24T22:06:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Combined_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1_combined')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "combined"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSP_costmgmt_exports')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "upsert-test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "billingAccountName",
						"type": "String"
					},
					{
						"name": "partnerName",
						"type": "String"
					},
					{
						"name": "resellerName",
						"type": "String"
					},
					{
						"name": "resellerMpnId",
						"type": "String"
					},
					{
						"name": "customerTenantId",
						"type": "String"
					},
					{
						"name": "customerName",
						"type": "String"
					},
					{
						"name": "costCenter",
						"type": "String"
					},
					{
						"name": "billingPeriodEndDate",
						"type": "String"
					},
					{
						"name": "billingPeriodStartDate",
						"type": "String"
					},
					{
						"name": "servicePeriodEndDate",
						"type": "String"
					},
					{
						"name": "servicePeriodStartDate",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "serviceFamily",
						"type": "String"
					},
					{
						"name": "productOrderId",
						"type": "String"
					},
					{
						"name": "productOrderName",
						"type": "String"
					},
					{
						"name": "consumedService",
						"type": "String"
					},
					{
						"name": "meterId",
						"type": "String"
					},
					{
						"name": "meterName",
						"type": "String"
					},
					{
						"name": "meterCategory",
						"type": "String"
					},
					{
						"name": "meterSubCategory",
						"type": "String"
					},
					{
						"name": "meterRegion",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "SubscriptionId",
						"type": "String"
					},
					{
						"name": "subscriptionName",
						"type": "String"
					},
					{
						"name": "publisherType",
						"type": "String"
					},
					{
						"name": "publisherId",
						"type": "String"
					},
					{
						"name": "publisherName",
						"type": "String"
					},
					{
						"name": "resourceGroupName",
						"type": "String"
					},
					{
						"name": "ResourceId",
						"type": "String"
					},
					{
						"name": "resourceLocation",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "effectivePrice",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "unitOfMeasure",
						"type": "String"
					},
					{
						"name": "chargeType",
						"type": "String"
					},
					{
						"name": "billingCurrency",
						"type": "String"
					},
					{
						"name": "pricingCurrency",
						"type": "String"
					},
					{
						"name": "costInBillingCurrency",
						"type": "String"
					},
					{
						"name": "costInUsd",
						"type": "String"
					},
					{
						"name": "exchangeRatePricingToBilling",
						"type": "String"
					},
					{
						"name": "exchangeRateDate",
						"type": "String"
					},
					{
						"name": "serviceInfo1",
						"type": "String"
					},
					{
						"name": "serviceInfo2",
						"type": "String"
					},
					{
						"name": "additionalInfo",
						"type": "String"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "PayGPrice",
						"type": "String"
					},
					{
						"name": "frequency",
						"type": "String"
					},
					{
						"name": "term",
						"type": "String"
					},
					{
						"name": "reservationId",
						"type": "String"
					},
					{
						"name": "reservationName",
						"type": "String"
					},
					{
						"name": "pricingModel",
						"type": "String"
					},
					{
						"name": "unitPrice",
						"type": "String"
					},
					{
						"name": "benefitId",
						"type": "String"
					},
					{
						"name": "benefitName",
						"type": "String"
					},
					{
						"name": "provider",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSP_costmgmt_exports_new')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "CSP",
						"container": "payg-test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "billingAccountName",
						"type": "String"
					},
					{
						"name": "partnerName",
						"type": "String"
					},
					{
						"name": "resellerName",
						"type": "String"
					},
					{
						"name": "resellerMpnId",
						"type": "String"
					},
					{
						"name": "customerTenantId",
						"type": "String"
					},
					{
						"name": "customerName",
						"type": "String"
					},
					{
						"name": "costCenter",
						"type": "String"
					},
					{
						"name": "billingPeriodEndDate",
						"type": "String"
					},
					{
						"name": "billingPeriodStartDate",
						"type": "String"
					},
					{
						"name": "servicePeriodEndDate",
						"type": "String"
					},
					{
						"name": "servicePeriodStartDate",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "serviceFamily",
						"type": "String"
					},
					{
						"name": "productOrderId",
						"type": "String"
					},
					{
						"name": "productOrderName",
						"type": "String"
					},
					{
						"name": "consumedService",
						"type": "String"
					},
					{
						"name": "meterId",
						"type": "String"
					},
					{
						"name": "meterName",
						"type": "String"
					},
					{
						"name": "meterCategory",
						"type": "String"
					},
					{
						"name": "meterSubCategory",
						"type": "String"
					},
					{
						"name": "meterRegion",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "SubscriptionId",
						"type": "String"
					},
					{
						"name": "subscriptionName",
						"type": "String"
					},
					{
						"name": "publisherType",
						"type": "String"
					},
					{
						"name": "publisherId",
						"type": "String"
					},
					{
						"name": "publisherName",
						"type": "String"
					},
					{
						"name": "resourceGroupName",
						"type": "String"
					},
					{
						"name": "ResourceId",
						"type": "String"
					},
					{
						"name": "resourceLocation",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "effectivePrice",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "unitOfMeasure",
						"type": "String"
					},
					{
						"name": "chargeType",
						"type": "String"
					},
					{
						"name": "billingCurrency",
						"type": "String"
					},
					{
						"name": "pricingCurrency",
						"type": "String"
					},
					{
						"name": "costInBillingCurrency",
						"type": "String"
					},
					{
						"name": "costInUsd",
						"type": "String"
					},
					{
						"name": "exchangeRatePricingToBilling",
						"type": "String"
					},
					{
						"name": "exchangeRateDate",
						"type": "String"
					},
					{
						"name": "serviceInfo1",
						"type": "String"
					},
					{
						"name": "serviceInfo2",
						"type": "String"
					},
					{
						"name": "additionalInfo",
						"type": "String"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "PayGPrice",
						"type": "String"
					},
					{
						"name": "frequency",
						"type": "String"
					},
					{
						"name": "term",
						"type": "String"
					},
					{
						"name": "reservationId",
						"type": "String"
					},
					{
						"name": "reservationName",
						"type": "String"
					},
					{
						"name": "pricingModel",
						"type": "String"
					},
					{
						"name": "unitPrice",
						"type": "String"
					},
					{
						"name": "benefitId",
						"type": "String"
					},
					{
						"name": "benefitName",
						"type": "String"
					},
					{
						"name": "provider",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PAYG_costmgmt_exports')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "PAYG",
						"container": "payg-test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubscriptionGuid",
						"type": "String"
					},
					{
						"name": "ResourceGroup",
						"type": "String"
					},
					{
						"name": "ResourceLocation",
						"type": "String"
					},
					{
						"name": "UsageDateTime",
						"type": "String"
					},
					{
						"name": "MeterCategory",
						"type": "String"
					},
					{
						"name": "MeterSubcategory",
						"type": "String"
					},
					{
						"name": "MeterId",
						"type": "String"
					},
					{
						"name": "MeterName",
						"type": "String"
					},
					{
						"name": "MeterRegion",
						"type": "String"
					},
					{
						"name": "UsageQuantity",
						"type": "String"
					},
					{
						"name": "ResourceRate",
						"type": "String"
					},
					{
						"name": "PreTaxCost",
						"type": "String"
					},
					{
						"name": "ConsumedService",
						"type": "String"
					},
					{
						"name": "ResourceType",
						"type": "String"
					},
					{
						"name": "InstanceId",
						"type": "String"
					},
					{
						"name": "Tags",
						"type": "String"
					},
					{
						"name": "OfferId",
						"type": "String"
					},
					{
						"name": "AdditionalInfo",
						"type": "String"
					},
					{
						"name": "ServiceInfo1",
						"type": "String"
					},
					{
						"name": "ServiceInfo2",
						"type": "String"
					},
					{
						"name": "ServiceName",
						"type": "String"
					},
					{
						"name": "ServiceTier",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					},
					{
						"name": "UnitOfMeasure",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/upsert-test/blobs/Kno2-Data and Analytics/dailypowerbi",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSP_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSP_costmgmt_exports",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1_test",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ExtractAdditionalInfo",
							"description": "Creating columns 'StorageService' (all derived from \"additionalInfo\" column)"
						},
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          billingAccountName as string,",
						"          partnerName as string,",
						"          resellerName as string,",
						"          resellerMpnId as string,",
						"          customerTenantId as string,",
						"          customerName as string,",
						"          costCenter as string,",
						"          billingPeriodEndDate as date 'MM/dd/yy',",
						"          billingPeriodStartDate as date 'MM/dd/yy',",
						"          servicePeriodEndDate as date 'MM/dd/yy',",
						"          servicePeriodStartDate as date 'MM/dd/yy',",
						"          date as date 'MM/dd/yy',",
						"          serviceFamily as string,",
						"          productOrderId as string,",
						"          productOrderName as string,",
						"          consumedService as string,",
						"          meterId as string,",
						"          meterName as string,",
						"          meterCategory as string,",
						"          meterSubCategory as string,",
						"          meterRegion as string,",
						"          ProductId as string,",
						"          ProductName as string,",
						"          SubscriptionId as string,",
						"          subscriptionName as string,",
						"          publisherType as string,",
						"          publisherId as string,",
						"          publisherName as string,",
						"          resourceGroupName as string,",
						"          ResourceId as string,",
						"          resourceLocation as string,",
						"          location as string,",
						"          effectivePrice as decimal(38,18),",
						"          quantity as decimal(38,18),",
						"          unitOfMeasure as string,",
						"          chargeType as string,",
						"          billingCurrency as string,",
						"          pricingCurrency as string,",
						"          costInBillingCurrency as decimal(38,18),",
						"          costInUsd as decimal(38,18),",
						"          exchangeRatePricingToBilling as boolean,",
						"          exchangeRateDate as date 'MM/dd/yy',",
						"          serviceInfo1 as string,",
						"          serviceInfo2 as string,",
						"          additionalInfo as string,",
						"          tags as string,",
						"          PayGPrice as decimal(38,18),",
						"          frequency as string,",
						"          term as string,",
						"          reservationId as string,",
						"          reservationName as string,",
						"          pricingModel as string,",
						"          unitPrice as decimal(38,18),",
						"          benefitId as string,",
						"          benefitName as string,",
						"          provider as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     purgeFiles: true,",
						"     rowUrlColumn: 'CostExportFileName',",
						"     modifiedAfter: (toTimestamp(1676332800000L)),",
						"     wildcardPaths:['**/*.csv']) ~> source1",
						"source1 derive(StorageService = iif(regexMatch(additionalInfo, `\"StorageService\":`), regexExtract(additionalInfo, `\"StorageService\": \"(.*?)\"`), \"N/A\")) ~> ExtractAdditionalInfo",
						"ExtractAdditionalInfo alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['date','meterId','ResourceId','StorageService'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSP_costmgmt_exports')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1_test')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Combined_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSP_costmgmt_exports_new",
								"type": "DatasetReference"
							},
							"name": "CSP"
						},
						{
							"dataset": {
								"referenceName": "PAYG_costmgmt_exports",
								"type": "DatasetReference"
							},
							"name": "PAYG"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1_combined",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns",
							"description": "Creating columns 'StorageService' (all derived from \"additionalInfo\" column)"
						},
						{
							"name": "CombineCSPwithPAYG"
						},
						{
							"name": "SelectColumnsFromPAYG"
						},
						{
							"name": "SelectColumnsFromCSP"
						}
					],
					"scriptLines": [
						"source(output(",
						"          billingAccountName as string,",
						"          partnerName as string,",
						"          resellerName as string,",
						"          resellerMpnId as string,",
						"          customerTenantId as string,",
						"          customerName as string,",
						"          costCenter as string,",
						"          billingPeriodEndDate as date 'MM/dd/yy',",
						"          billingPeriodStartDate as date 'MM/dd/yy',",
						"          servicePeriodEndDate as date 'MM/dd/yy',",
						"          servicePeriodStartDate as date 'MM/dd/yy',",
						"          date as date 'MM/dd/yy',",
						"          serviceFamily as string,",
						"          productOrderId as string,",
						"          productOrderName as string,",
						"          consumedService as string,",
						"          meterId as string,",
						"          meterName as string,",
						"          meterCategory as string,",
						"          meterSubCategory as string,",
						"          meterRegion as string,",
						"          ProductId as string,",
						"          ProductName as string,",
						"          SubscriptionId as string,",
						"          subscriptionName as string,",
						"          publisherType as string,",
						"          publisherId as string,",
						"          publisherName as string,",
						"          resourceGroupName as string,",
						"          ResourceId as string,",
						"          resourceLocation as string,",
						"          location as string,",
						"          effectivePrice as decimal(38,18),",
						"          quantity as decimal(38,18),",
						"          unitOfMeasure as string,",
						"          chargeType as string,",
						"          billingCurrency as string,",
						"          pricingCurrency as string,",
						"          costInBillingCurrency as decimal(38,18),",
						"          costInUsd as decimal(38,18),",
						"          exchangeRatePricingToBilling as boolean,",
						"          exchangeRateDate as date 'MM/dd/yy',",
						"          serviceInfo1 as string,",
						"          serviceInfo2 as string,",
						"          additionalInfo as string,",
						"          tags as string,",
						"          PayGPrice as decimal(38,18),",
						"          frequency as string,",
						"          term as string,",
						"          reservationId as string,",
						"          reservationName as string,",
						"          pricingModel as string,",
						"          unitPrice as decimal(38,18),",
						"          benefitId as string,",
						"          benefitName as string,",
						"          provider as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     rowUrlColumn: 'CostExportFileName',",
						"     wildcardPaths:['CSP/**/*.csv']) ~> CSP",
						"source(output(",
						"          SubscriptionGuid as string,",
						"          ResourceGroup as string,",
						"          ResourceLocation as string,",
						"          UsageDateTime as date 'yyyy-MM-dd',",
						"          MeterCategory as string,",
						"          MeterSubcategory as string,",
						"          MeterId as string,",
						"          MeterName as string,",
						"          MeterRegion as string,",
						"          UsageQuantity as decimal(38,18),",
						"          ResourceRate as decimal(38,18),",
						"          PreTaxCost as decimal(38,18),",
						"          ConsumedService as string,",
						"          ResourceType as string,",
						"          InstanceId as string,",
						"          Tags as string,",
						"          OfferId as string,",
						"          AdditionalInfo as string,",
						"          ServiceInfo1 as string,",
						"          ServiceInfo2 as string,",
						"          ServiceName as string,",
						"          ServiceTier as string,",
						"          Currency as string,",
						"          UnitOfMeasure as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     rowUrlColumn: 'CostExportFileName',",
						"     wildcardPaths:['PAYG/**/*.csv']) ~> PAYG",
						"CombineCSPwithPAYG derive(StorageService = iif(regexMatch(additionalInfo, `\"StorageService\":`), regexExtract(additionalInfo, `\"StorageService\": \"(.*?)\"`), \"N/A\"),",
						"          ResourceType = regexExtract(lower(ResourceId), `providers/(.*)/`)) ~> DerivedColumns",
						"SelectColumnsFromCSP, SelectColumnsFromPAYG union(byName: true)~> CombineCSPwithPAYG",
						"PAYG select(mapColumn(",
						"          SubscriptionId = SubscriptionGuid,",
						"          resourceGroupName = ResourceGroup,",
						"          location = ResourceLocation,",
						"          date = UsageDateTime,",
						"          meterCategory = MeterCategory,",
						"          meterSubCategory = MeterSubcategory,",
						"          meterId = MeterId,",
						"          meterName = MeterName,",
						"          meterRegion = MeterRegion,",
						"          quantity = UsageQuantity,",
						"          PayGPrice = ResourceRate,",
						"          unitPrice = ResourceRate,",
						"          costInBillingCurrency = PreTaxCost,",
						"          costInUsd = PreTaxCost,",
						"          consumedService = ConsumedService,",
						"          ResourceType,",
						"          ResourceId = InstanceId,",
						"          tags = Tags,",
						"          additionalInfo = AdditionalInfo,",
						"          billingCurrency = Currency,",
						"          unitOfMeasure = UnitOfMeasure,",
						"          CostExportFileName,",
						"          serviceInfo1 = ServiceInfo1,",
						"          serviceInfo2 = ServiceInfo2",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectColumnsFromPAYG",
						"CSP select(mapColumn(",
						"          date,",
						"          consumedService,",
						"          meterId,",
						"          meterName,",
						"          meterCategory,",
						"          meterSubCategory,",
						"          meterRegion,",
						"          SubscriptionId,",
						"          resourceGroupName,",
						"          ResourceId,",
						"          location,",
						"          quantity,",
						"          unitOfMeasure,",
						"          billingCurrency,",
						"          costInBillingCurrency,",
						"          costInUsd,",
						"          serviceInfo1,",
						"          serviceInfo2,",
						"          additionalInfo,",
						"          tags,",
						"          PayGPrice,",
						"          unitPrice,",
						"          CostExportFileName",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectColumnsFromCSP",
						"DerivedColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSP_costmgmt_exports_new')]",
				"[concat(variables('factoryId'), '/datasets/PAYG_costmgmt_exports')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1_combined')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		}
	]
}